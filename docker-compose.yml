version: '2'
services:

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes_from:
      -  mongodata
    networks:
      - wfij

  mongodata:
    image: busybox
    volumes:
      - /home/keryhu/dbdata/mongodb:/data/db
    networks:
      - wfij


  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes_from:
      -  redisdata
#产品时，这个需要根据实际情况修改，同时需要修改更新的还有 spring 中的redis yml配置
    environment:
      - REDIS_PASSWORD=29c4181fb842b5f24a3103dbd2ba17accb1f7e3c8f198689821f7955401ab921
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - wfij

  redisdata:
    image: busybox
          #产品上线时候，需要修改实际的map本地地址
    volumes:
       - /home/keryhu/dbdata/redis_data:/data
       - /home/keryhu/dbdata/redis_logs:/var/log/redis
       - /home/keryhu/dbdata/redis_conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
       - wfij


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    #此环境变量设置rabbitmq 的初始 用户，密码，和vhost，并且删除了默认的guest用户
    #此变量与spring－service中的变量设置一致，一同修改
    environment:
      RABBITMQ_DEFAULT_USER: wfij
      RABBITMQ_DEFAULT_PASS: kkslcm8923s
      RABBITMQ_DEFAULT_VHOST: /wfij
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - wfij
  

  eureka:
    image: eureka:0.0.1-SNAPSHOT
    container_name: eureka
    restart: always
    ports:
      - "8761:8761"
    environment:
      DOMAIN_NAME: 192.168.1.110
    networks:
      - wfij
    
      
  configserver:
    image: config-server:0.0.1-SNAPSHOT
    container_name: configserver
    restart: always
    ports:
      - "8888:8888"
    environment:
      DOMAIN_NAME: 192.168.1.110
    networks:
      - wfij
    depends_on: 
      - eureka
      
      
  useraccount:
    image: user-account:0.0.1-SNAPSHOT
    container_name: useraccount
    restart: always
    ports:
      - "8001:8001"
    environment:
      MONGO_HOST: mongo
      DOMAIN_NAME: 192.168.1.110
      RABBIT_HOST: rabbitmq
    networks:
      - wfij
    depends_on: 
      - mongo
      - eureka
      - configserver
      
      
  authserver:
    image: auth-server:0.0.1-SNAPSHOT
    container_name: authserver
    restart: always
    ports:
      - "9999:9999"
    environment:
      DOMAIN_NAME: 192.168.1.110
      RABBIT_HOST: rabbitmq
    networks:
      - wfij
    depends_on: 
      - mongo
      - redis
      - eureka
      - useraccount


 
    
  propertyregister:
    image: property-register:0.0.1-SNAPSHOT
    container_name: propertyregister
    restart: always
    ports:
     - "8003:8003"
    environment:
      DOMAIN_NAME: 192.168.1.110
      RABBIT_HOST: rabbitmq
    networks:
      - wfij
    depends_on: 
      - eureka
      - configserver
      
  mailserver:
    image: mail-server:0.0.1-SNAPSHOT
    container_name: mailserver
    restart: always
    ports:
     - "8002:8002"
    environment:
      DOMAIN_NAME: 192.168.1.110
      RABBIT_HOST: rabbitmq
    networks:
      - wfij
    depends_on: 
      - eureka
      - configserver

  emailactivate:
    image: email-activate:0.0.1-SNAPSHOT
    container_name: emailactivate
    restart: always
    ports:
     - "8004:8004"
    environment:
      MONGO_HOST: mongo
      RABBIT_HOST: rabbitmq
      DOMAIN_NAME: 192.168.1.110
    networks:
      - wfij
    depends_on: 
      - eureka
      - configserver

  pcgateway:
    image: pc-gateway:0.0.1-SNAPSHOT
    container_name: pcgateway
    restart: always
    domainname: 192.168.1.110
    ports:
      - "8080:8080"
    environment:
      DOMAIN_NAME: 192.168.1.110
    networks:
      - wfij
    depends_on: 
      - mongo
      - redis
      - eureka
      - configserver
      - authserver
      - useraccount
      - mailserver

networks:
  wfij:
    external:
      name: wfij-net







